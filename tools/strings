function strings_constructor {
	grab binary assert
	binary fold
	(( $+COLUMNS )) || zmodload -F zsh/terminfo +b:echoti
	zmodload -F zsh/zutil +b:zparseopts
}

function get_columns {
	if ! (( $+COLUMNS )); then
		retval_i=$(echoti cols 2>/dev/null || :)
		[[ $retval_i -eq 0 ]] && retval_i=79
	else
		retval_i=$COLUMNS
	fi
}

function merge_short_arg {
	assert "[[ $# -eq 3 ]]"
	assert "(( \$+$1 ))"
	eval "(( \$+${1}[$2] ))" && eval "args[$3]=\"\$$1[$2]\""
}

function fold {
	typeset -i cols
	typeset -A args
	zparseopts -K -D -A args m: -margin: b -bytes s -spaces w: -width:
	merge_short_arg args -w --width
	merge_short_arg args -m --margin
	merge_short_arg args -b --bytes
	merge_short_arg args -s --spaces

	if (( $+args[--width] )); then
		cols=$args[--width]
	else
		get_columns
		cols="$retval_i"
	fi

	typeset -a foldargs
	foldargs+=( "-w" "$cols" )
	(( $+args[--spaces] )) && foldargs+=( "-s" )
	(( $+args[--bytes] )) && foldargs+=( "-b" )
	retval="$(command fold "$foldargs[@]" "$@")"
}

# vim:ft=zsh
