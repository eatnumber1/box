#!/bin/zsh
emulate -L zsh
setopt err_exit
#setopt xtrace

# TODO: Treat zshmodules as tools
zmodload zsh/parameter

# TODO: Add zparseopts support

typeset -r PROGNAME="${0##*/}"

typeset -a box_path
typeset -r box_userdir="$HOME/.box"
if [[ -d "$box_userdir" ]]; then
	[[ -f "$box_userdir/config" ]] && source "$box_userdir/config"
	[[ -d "$box_userdir/tools" ]] && box_path+=( "$box_userdir/tools" )
fi

# Boostrap functions: These will be replaced once we are fully initialized.
function assert {
	if ! eval "$*"; then
		echo "Assertion failed at $functrace[1]" >&2
		exit 255
	fi
}
# End bootstrap functions

typeset -ga loaded_tools

function path_search_one {
	assert "[[ $# == 2 ]]"

	local i
	for i in $2/*; do
		if [[ ${i##*/} == $1 ]]; then
			retval=( "$i" )
			return 0
		fi
	done
	return 1
}

function path_search {
	assert "[[ $# == 1 ]]"
	assert "(( $+box_path ))"
	
	local path_elem
	for path_elem in "${box_path[@]}"; do
		path_search_one "$1" "$path_elem" || continue

		retval=( "$path_elem" )
		return 0
	done
	return 1
}

function generate_free_function_name {
	# Can't call tools here because this is called during free
	retval=( "box_internal_${1}_free" )
}

function tool_init {
	assert "[[ $# -eq 2 ]]"
	local modname="$1" moddir="$2"
	local modfile="$moddir/$modname"
	assert "[[ -f $modfile ]]"

	source "$modfile"
	generate_free_function_name "$modname"
	local cleanup="function $retval {; "
	if (( ${+functions[${modname}_free]} )); then
		cleanup+="${modname}_free; "
		cleanup+="unset -f ${modname}_free; "
	fi
	cleanup+="unset -f $retval; }"
	eval "$cleanup"
	loaded_tools+=( "$modname" )
	(( ${+functions[${modname}_init]} )) && ${modname}_init
	return 0
}

function tool_is_loaded {
	assert "[[ $# -eq 1 ]]"
	(( ${+loaded_tools[(r)*${1}]} ))
}

function require {
	assert "[[ $# -ne 0 ]]"

	local tool
	for tool in "$@"; do
		[[ -z "$tool" ]] && continue
		tool_is_loaded "$tool" && continue
		path_search "$tool" || return 1
		
		tool_init "$tool" "$retval"
	done
}

function free_tools {
	assert "[[ $# -ne 0 ]]"
	
	local tool
	for tool in "$@"; do
		generate_free_function_name "$tool"
		$retval
	done
}

require usage
if ! require "$1"; then
	usage
	exit 1
fi
"$@"

free_tools "${(aO)loaded_tools[@]}"
unset loaded_tools

# vim:ts=4 sts=4
